// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  address     String   @unique
  tasks       Task[]
}

model Task {
  id          Int               @id @default(autoincrement())
  title       String            @default("Select the most clickable thumbnail")
  option      Option[]
  user_id     Int
  signature   String
  amount      String
  user        User               @relation(fields: [user_id], references: [id])
  submissions Submission[]
}

model Option {
  id            Int               @id @default(autoincrement())
  ipfs_cid      String?           // unique CID returned by Pinata (e.g., Qm123...)
  ipfs_uri      String?           // canonical IPFS URI, like ipfs://Qm123
  gateway_url   String?           // Pinata gateway URL, like https://gateway.pinata.cloud/ipfs/Qm123
  image_url     String?           // optional fallback or original link (if provided)
  option_id     Int?
  task_id       Int
  task          Task              @relation(fields: [task_id], references: [id])
  submissions   Submission[]
}

model Worker {
  id                Int             @id @default(autoincrement())
  address           String          @unique
  submissions       Submission[]
  balance_id        Int
  pending_amount    Int
  locked_amount     Int
}

model Submission {
  id          Int       @id @default(autoincrement())
  worker_id   Int
  worker      Worker    @relation(fields: [worker_id], references: [id])
  option_id   Int
  option      Option    @relation(fields: [option_id], references: [id])
  task_id     Int
  task        Task      @relation(fields: [task_id], references: [id])
  amount      String
}


// Bypass the iterating step and makes it faster to show submissions
// For now we added task_id in submission so it know but a bit slower

// model SubmissionCache {
//   id          Int       @id @default(autoincrement())
//   task_id     Int
//   option1     Int
//   option2     Int
//   option3     Int
//   option4     Int
//   option5     Int
//   option6     Int
//   option7     Int
//   option8     Int
// }